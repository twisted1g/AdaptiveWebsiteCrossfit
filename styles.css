/* fonts */
@font-face {
    font-family: "Hebbo";
    src: url("/fonts/Heebo-Light.woff2") format("woff2");
    font-weight: 300;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: "Hebbo";
    src: url("fonts/Heebo-Bold.woff2") format("woff2");
    font-weight: 700;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: "Yantramanav";
    src: url("fonts/Yantramanav-Bold.woff2") format("woff2");
    font-weight: 700;
    font-style: normal;
    font-display: swap;
}

/* css normalize stats*/
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
    box-sizing: border-box;
}

/**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
:where(ul, ol):where([class]) {
    padding-left: 0;
}

/**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
body,
:where(blockquote, figure):where([class]) {
    margin: 0;
}

/**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
    margin-block: 0;
}

:where(dd[class]) {
    margin-left: 0;
}

:where(fieldset[class]) {
    margin-left: 0;
    padding: 0;
    border: none;
}

/**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
:where(ul[class]) {
    list-style: none;
}

:where(address[class]) {
    font-style: normal;
}

/**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
p {
    --paragraphMarginBottom: 24px;

    margin-block: 0;
}

/**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
p:where(:not([class]):not(:last-child)) {
    margin-bottom: var(--paragraphMarginBottom);
}

/**
   Упрощаем работу с изображениями и видео
  */
img,
video {
    display: block;
    max-width: 100%;
    height: auto;
}

/**
   Наследуем свойства шрифт для полей ввода
  */
input,
textarea,
select,
button {
    font: inherit;
}

html {
    /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
    height: 100%;
    /**
     Убираем скачок интерфейса по горизонтали
     при появлении / исчезновении скроллбара
    */
    scrollbar-gutter: stable;
}

/**
   Плавный скролл
  */
html,
:has(:target) {
    scroll-behavior: smooth;
}

body {
    /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
    min-height: 100%;
    /**
     Унифицированный интерлиньяж
    */
    line-height: 1.5;
}

/**
   Нормализация высоты элемента ссылки при его инспектировании в DevTools
  */
a:where([class]) {
    display: inline-flex;
}

/**
   Курсор-рука при наведении на элемент
  */
button,
label {
    cursor: pointer;
}

/**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут fill со значением 'none' или начинается с 'url')
  */
:where([fill]:not([fill="none"], [fill^="url"])) {
    fill: currentColor;
}

/**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут stroke со значением 'none')
  */
:where([stroke]:not([stroke="none"], [stroke^="url"])) {
    stroke: currentColor;
}

/**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
svg * {
    transition-property: fill, stroke;
}

/**
   Приведение рамок таблиц в классический 'collapse' вид
  */
:where(table) {
    border-collapse: collapse;
    border-color: currentColor;
}

/**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
@media (prefers-reduced-motion: reduce) {
    *,
    ::before,
    ::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}
/* css normalize ends*/

/* roots */
:root {
    /* colors */
    --color-white: #ffffff;
    --color-black: #000000;
    --color-grey: #404040;
    --color-light-grey: #c4c4c4;

    --border-radius: 30px;
    --border: 1px solid var(--color-white);

    --font-family-base: "Heebo", sans-serif;
    --font-family-addition: "Yantramanav", sans-serif;

    --input-height: 54px;

    --container-width: 1300px;
    --container-padding: 15px;

    --transition-duration: 0.2s;
}

body {
    font-family: var(--font-family-base);
    font-size: 16px;
    line-height: 1.75;
    background-color: var(--color-black);
    color: var(--color-light-grey);
}

.container {
    max-width: calc(var(--container-width) + var(--container-padding) * 2);
    margin-inline: auto;
    padding-inline: var(--container-padding);
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-weight: 700;
    text-transform: uppercase;
}

a,
button,
input,
textarea,
svg * {
    transition-duration: var(--transition-duration);
}

a {
    color: var(--color-white);
}
a:hover {
    color: var(--color-light-grey);
}

.button {
    display: inline-flex;
    height: 38px;
    align-items: center;
    padding-inline: 26px;
    font-weight: 700;
    line-height: 2;
    text-transform: uppercase;
    letter-spacing: 1.2px;
    font-size: 12px;
    border: none;
    border-radius: var(--border-radius);
    cursor: default;
    white-space: nowrap;
}

.button:hover {
    background-color: var(--color-light-grey);
}

.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    column-gap: 20px;
    padding-inline: 32px;
}
.header-logo {
    flex-shrink: 0;
}

.header-logo-image {
    width: 135px;
    height: 25px;
}

.header-menu-list {
    display: flex;
    flex-wrap: wrap;
    column-gap: 50px;
}

.header-menu-link {
    display: inline-flex;
    align-items: center;
    height: 90px;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: 700;
    font-size: 12px;
    letter-spacing: 1.2px;
    column-gap: 7px;
}

.header-menu-link.is-currnet::after {
    content: "";
    width: 5px;
    height: 5px;
    border-radius: 50%;
    background-color: currentColor;
}

.header-actions {
    display: flex;
    column-gap: 39px;
}

.header-burger-button {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    width: 40px;
    height: 40px;
    color: var(--color-white);
    background-color: transparent;
    border: var(--border);
    border-radius: var(--border-radius);
}

@media (max-width: 1024px) {
    .header {
        flex-wrap: wrap;
        row-gap: 10px;
        padding-inline: 15px;
        padding-top: 20px;
    }

    .header-menu {
        order: 1;
        flex-basis: 100%;
    }
    .header-menu-link {
        height: 60px;
    }
}

@media (max-width: 767px) {
    .button {
        padding-inline: 18px;
    }
    .header-menu-link {
        height: 30px;
    }
    .header-menu0list {
        column-gap: 25px;
    }
    .header {
        padding-top: 10px;
    }
    .header-actions {
        column-gap: 15px;
    }
}
